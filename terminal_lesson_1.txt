pwd - показывает, где я сейчас нахожусь

cd 1 открыть папку 1

cd ../ - (пробел внутри!) выйти из папки, в которой находишься, на уровень выше
cd ../../ -  выйти из папки, в которой находишься, на 2 уровня выше, аналогично можно и выше

ls -la (эл эс пробел минус эл эй) - показать содержимое папки

mkdir 1/new_1_1  (создание новой папки с названием new_1_1 в папке с названием 1, через дробь показываем путь создания новой папки)
mkdir 1 2 3 (создание трех папок в текущей папке с названиями 1, 2, 3)

touch 1.txt   создание файла с названием 1, указываем формат после точки
touch index.html style.css script.js - если нужно создать несколько файлов, их имена можно вводить через пробел;

clear - очистить видимую часть в терминале без удаления (только наши запросы и ответы)

history - показывает историю команд в терминале за все время существования терминала
history >> hist.txt   запись всей истории терминала в текстовый файл

vim new_file.txt - открыть файл для редактирования
→ нажать клавишу ай "I" → переход в режим ввода → редактируем файл
выйти и сохранить файл:
нажать Esc, чтобы выйти из режима ввода Insert,
потом нажать  shift + : , чтобы перейти в режим ввода командной строки
потом нажать :wq, чтобы выйти из редактирования файла в терминал

rm new_file.txt - удалить файл

cat new_file.txt - вывести в терминал содержимое файла, если перечислять через пробел два файла, то в консоль выведет содержимое двух файлов, объединенное, хотя по факту содержимое не объединяется, просто отображается в терминале вместе
cat >> new_file.txt  - создание нового файла и редактирование его в терминале
cat > 1.txt  создание файла с названием 1, указываем формат после точки c возможностью его редактирования внутри файла
с новой строки пишем текст внутри файла
Ctrl+C - выход из редактора этого файла в терминал
cat  1.txt    вывести в терминал содержимое файла
cat > > 1.txt  редактировать текст в файле

less 1.txt  просмотр содержимого файла в режиме просмотра самого файла, с возможностью поиска внутри него определенного текста
/hello   поиск текста hello в самом файле
wq - завершить

mv 1.txt  1/1.txt   переместить файл 1.txt в папку 1 с именем и форматом этого файла 1.tx
mv 1/1.txt 2/2.txt  переместить файл 1.txt из папки 1 в папку 2, переименовав файл в 2.txt
mv 1.txt  1_1.txt переименование файла 1 в файл 1_1

vim - текстовый редактор внутри терминала
vim 1.txt - открыть текстовый редактор файла 1.txt
нажать клавишу i для активации работы в текстовом редакторе, внизу засветится INSERT
завершаем редактирование файла: нажать ESC, потом Shift + :  → появляется : с ожиданием команды
wq - завершить

grep Hello 1upd.txt    поиск по файлу 1upd.txt  текста Hello (команда регистрозависима) 
grep -i hello 1upd.txt    поиск по файлу 1upd.txt  текста Hello (команда не регистрозависима)
grep -v hello 1upd.txt   вывести в терминал все строки файла 1upd.txt, которые не содержит текст hello (команда регистрозависима)
grep -с hello 1upd.txt   посчитать количество строк, которые содержат текст hello в  файле 1upd.txt (команда регистрозависима)
grep -iс hello 1upd.txt   посчитать количество строк, которые содержат текст hello в  файле 1upd.txt (команда не регистрозависима)
grep -R hello Git_bash    вывести в терминал все строки, которые содержат текст hello в папке  Git_bash

cp brothers.html sisters.html - скопируй файл brothers.html и назови новый файл sisters.html;
cp ../docs/brothers.html ../Documents/ - скопировали brothers.html в папку Documents;

nano logs/2020/1/apache_2020-01-01, txt - открой текстовый файл apache_2020-01-01.txt;
nano 1.txt  открыть файл в текстовом редакторе с возможностью редактировать, 
внизу будет панель горячих клавиш , 
где ^ это кнопка CTRL, 
например CTRL+О это закончить редактировать файл, 
затем подтвердить имя файла с возможностью его переименования

exit - закрой консоль

